name: tests
on: push

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker Layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          file: Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: run tests
        run: make integration-tests

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.13"

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }} and create virtual environment
        run: |
          uv python install ${{ matrix.python-version }}
          uv venv --python ${{ matrix.python-version }}

      - name: Install Octave
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq octave octave-dev libmpfr-dev

      - name: Install Yarn and Node
        uses: actions/setup-node@v5
        with:
          node-version: 18.x

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Install Python dependencies
        run: |
          uv pip install --upgrade pip setuptools wheel coveralls
          uv pip install --only-binary=numpy --only-binary=scipy -r requirements.txt

      - name: Run tests
        run: |
          export PATH="$(yarn bin):$PATH"
          uv run make test

      - name: Report Coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          uv run coveralls --service=github
